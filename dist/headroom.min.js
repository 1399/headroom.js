// headroom.js v0.1.1 - Give your page room to breathe. Hide your header until you need it
// Copyright (c) 2013 Nick Williams - http://wicky.nillia.ms/
// License: MIT

!function(a){"use strict";function b(a){this.callback=a,this.ticking=!1}function c(a){this.elem=a,this.debouncer=new b(this.update.bind(this)),this.lastKnownScrollY=0}b.prototype={constructor:b,update:function(){this.callback&&this.callback(),this.ticking=!1},requestTick:function(){this.ticking||(requestAnimationFrame(this.update.bind(this)),this.ticking=!0)},handleEvent:function(){this.update(),this.requestTick()}},c.prototype={constructor:c,init:function(){this.elem.classList.add(c.classes.initial,c.classes.pinned),setTimeout(this.attachEvent.bind(this),100)},destroy:function(){window.removeEventListener("scroll",this.eventHandler,!1),this.elem.classList.remove(c.classes.unpinned,c.classes.pinned,c.classes.initial)},attachEvent:function(){this.eventHandler||(this.eventHandler=this.debouncer.handleEvent.bind(this.debouncer),window.addEventListener("scroll",this.eventHandler,!1))},unpin:function(){var a=this.elem;a.classList.contains(c.classes.pinned)&&(a.classList.add(c.classes.unpinned),a.classList.remove(c.classes.pinned))},pin:function(){var a=this.elem;a.classList.contains(c.classes.unpinned)&&(a.classList.remove(c.classes.unpinned),a.classList.add(c.classes.pinned))},update:function(){var a=window.scrollY;a>this.lastKnownScrollY&&a>0?this.unpin():a<this.lastKnownScrollY&&this.pin(),this.lastKnownScrollY=a}},c.classes={pinned:"headroom--pinned",unpinned:"headroom--unpinned",initial:"headroom"},a.Headroom=c}(this);